---
swagger: "2.0"

basePath: /api
schemes:
    - http

info:
    description: oplanet consolidated api for ogame tools
    title: Ares API
    version: 1.0.0
consumes:
    - application/json
produces:
    - application/json

paths:
  /player:
    post:
      tags: [player]
      operationId: getPlayer
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PlayerRequest'
      responses:
        201:
         description: get player information
         schema:
           type: object
           additionalProperties: true
        400:
          description: bad request
        404:
          description: report not found
        500:
          description: Internal Server Error
        503:
          description: Service Unavailable
          schema:
            type: string

definitions:
  PlayerRequest:
    type: object
    required:
      - fleet
      - key
      - party
    properties:
      fleet:
        type: integer
        format: int64
      key:
        type: string
        pattern: "sr-.*"
      party:
        type: string
        enum:
          - attackers
          - defenders
  PlayerResponse:
    type: object
    properties: 
      data:
        type: object
      fleet:
        type: integer
        format: int64
      party:
        type: string
      server:
        $ref: '#/definitions/ServerData'
      time:
        type: number
        format: float64
  SpyReport:
    type: object
    properties: 
      activity: {type: integer}
      attacker:
        $ref: '#/definitions/PlayerData'
      defender:
        $ref: '#/definitions/PlayerData'
      id: {type: string}
      loot_percentage: {type: integer}
      spy_fail_chance: {type: integer}
      time: {type: string}
      timestamp: {type: integer}
      total_defence_count: {type: integer}
      total_ship_count: {type: integer}
  PlayerData:
    type: object
    properties:
      alliance:
        type: object
        required:
          - tag
          - name
        properties: 
          tag: {type: string}
          name: {type: string}
      class: {type: integer}
      id: {type: integer}
      name: {type: string}
      planet: {$ref: '#/definitions/Planet'}
      buildings: {$ref: '#/definitions/LevelableMap'}
      defence: {$ref: '#/definitions/CountableMap'}
      research: {$ref: '#/definitions/LevelableMap'}
      ships: {$ref: '#/definitions/CountableMap'}
      resources:
        type: object
        properties: 
          metal: {type: integer}
          crystal: {type: integer}
          deuterium: {type: integer}
          energy: {type: integer}
  Planet:
    type: object
    properties: 
      coordinates: {type: string}
      galaxy: {type: integer}
      system: {type: integer}
      position: {type: integer}
      name: {type: string}
      type: {type: integer}
  Countable:
    type: object
    properties:
      count: {type: integer}
      technology: {$ref: '#/definitions/TechnologyInfo'}
  Levelable:
    type: object
    properties:
      level: {type: integer}
      technology: {$ref: '#/definitions/TechnologyInfo'}
  CountableMap:
    type: object
    additionalProperties: 
      $ref: '#/definitions/Countable'
  LevelableMap:
    type: object
    additionalProperties: 
      $ref: '#/definitions/Levelable'
  TechnologyInfo:
    type: object
  ServerData:
    type: object
    properties: 
      name: {type: string}
      number: {type: integer}
      language: {type: string}
      timezone: {type: string}
      timezone_offset: {type: string}
      domain: {type: string}
      version: {type: string}
      speed: {type: integer}
      speed_fleet: {type: integer}
      galaxies: {type: integer}
      systems: {type: integer}
      acs: {type: boolean}
      rapid_fire: {type: boolean}
      def_to_tF: {type: boolean}
      debris_factor: {type: number}
      debris_factor_def: {type: number}
      repair_factor: {type: number}
      newbie_protection_limit: {type: integer}
      newbie_protection_high: {type: integer}
      top_score: {type: number}
      bonus_fields: {type: integer}
      donut_galaxy: {type: boolean}
      donut_system: {type: boolean}
      wf_enabled: {type: boolean}
      wf_min_res_lost: {type: integer}
      wf_min_loss_percent: {type: integer}
      wf_basic_percent_repairable: {type: integer}
      global_deuterium_save_factor: {type: number}
      bash_limit: {type: integer}
      probe_cargo: {type: boolean}
      research_duration_divisor: {type: integer}
      dark_matter_new_acount: {type: integer}
      cargo_hyperspace_tech_multiplier: {type: integer}
      # skipped market fields, I don't think it's enabled anywhere
      characterClassesEnabled: {type: boolean}
      minerBonusResourceProduction: {type: number}
      minerBonusFasterTradingShips: {type: boolean}
      minerBonusIncreasedCargoCapacityForTradingShips: {type: number}
      minerBonusAdditionalFleetSlots: {type: integer}
      resourceBuggyProductionBoost: {type: number}
      resourceBuggyMaxProductionBoost: {type: number}
      resourceBuggyEnergyConsumptionPerUnit: {type: integer}
      warriorBonusFasterCombatShips: {type: boolean}
      warriorBonusFasterRecyclers: {type: boolean}
      warriorBonusRecyclerFuelConsumption: {type: number}
      combatDebrisFieldLimit: {type: number}
      explorerBonusIncreasedResearchSpeed: {type: number}
      explorerBonusIncreasedExpeditionOutcome: {type: number}
      explorerBonusLargerPlanets: {type: number}
      explorerUnitItemsPerDay: {type: integer}


#   "marketplaceEnabled": "0",
#   "marketplaceBasicTradeRatioMetal": "2.5",
#   "marketplaceBasicTradeRatioCrystal": "1.5",
#   "marketplaceBasicTradeRatioDeuterium": "1",
#   "marketplacePriceRangeLower": "0.3",
#   "marketplacePriceRangeUpper": "1",
#   "marketplaceTaxNormalUser": "0.1",
#   "marketplaceTaxAdmiral": "0.05",
#   "marketplaceTaxCancelOffer": "0.15",
#   "marketplaceTaxNotSold": "0.15",
#   "marketplaceOfferTimeout": "3",
# }